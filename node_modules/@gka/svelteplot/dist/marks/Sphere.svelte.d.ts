declare const Sphere: import("svelte").Component<Partial<{
    filter?: import("../types.js").ConstantAccessor<boolean>;
    facet?: "auto" | "include" | "exclude";
    fx: import("../types.js").ChannelAccessor;
    fy: import("../types.js").ChannelAccessor;
    dx: import("../types.js").ConstantAccessor<number>;
    dy: import("../types.js").ConstantAccessor<number>;
    fill: import("../types.js").ConstantAccessor<string>;
    fillOpacity: import("../types.js").ConstantAccessor<number>;
    stroke: import("../types.js").ConstantAccessor<string>;
    strokeWidth: import("../types.js").ConstantAccessor<number>;
    strokeOpacity: import("../types.js").ConstantAccessor<number>;
    strokeLinejoin: import("../types.js").ConstantAccessor<"bevel" | "miter" | "miter-clip" | "round">;
    strokeLinecap: import("../types.js").ConstantAccessor<"butt" | "square" | "round">;
    strokeMiterlimit: import("../types.js").ConstantAccessor<number>;
    opacity: import("../types.js").ConstantAccessor<number>;
    strokeDasharray: import("../types.js").ConstantAccessor<string>;
    strokeDashoffset: import("../types.js").ConstantAccessor<number>;
    mixBlendMode: import("../types.js").ConstantAccessor<"normal" | "multiply" | "screen" | "overlay" | "darken" | "lighten" | "color-dodge" | "color-burn" | "hard-light" | "soft-light" | "difference" | "exclusion" | "hue" | "saturation" | "color" | "luminosity" | "plus-darker" | "plus-lighter">;
    clipPath: string;
    imageFilter: import("../types.js").ConstantAccessor<string>;
    shapeRendering: import("../types.js").ConstantAccessor<"crispEdges" | "geometricPrecision" | "optimizeSpeed" | "auto">;
    paintOrder: import("../types.js").ConstantAccessor<string>;
    onclick?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    ondblclick?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    onmouseup?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    onmousedown?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    onmouseenter?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    onmousemove?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    onmouseleave?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    onmouseout?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    ondrag?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    ondrop?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    ondragstart?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    ondragenter?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    ondragleave?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    ondragover?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    ondragend?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    ontouchstart?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    ontouchmove?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    ontouchend?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    ontouchcancel?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    oncontextmenu?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    onwheel?: import("svelte/elements").MouseEventHandler<SVGPathElement>;
    title: import("../types.js").ConstantAccessor<string>;
    href: import("../types.js").ConstantAccessor<string>;
    target: import("../types.js").ConstantAccessor<"_self" | "_blank" | string>;
    class: string;
}>, {}, "">;
type Sphere = ReturnType<typeof Sphere>;
export default Sphere;
