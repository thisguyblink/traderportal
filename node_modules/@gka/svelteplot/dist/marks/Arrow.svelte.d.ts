import { type Snippet } from 'svelte';
import type { DataRecord, BaseMarkProps, ConstantAccessor, ChannelAccessor, RawValue } from '../types.js';
import { type SweepOption } from '../helpers/arrowPath.js';
type ArrowProps = BaseMarkProps & {
    data: DataRecord[];
    sort?: ConstantAccessor<RawValue> | {
        channel: 'stroke' | 'fill';
    };
    x1: ChannelAccessor;
    y1: ChannelAccessor;
    x2: ChannelAccessor;
    y2: ChannelAccessor;
    stroke?: ChannelAccessor;
    /**
     * the bend angle, in degrees; defaults to 0°; true for 22.5°
     */
    bend?: ConstantAccessor<number> | true;
    /**
     * the arrowhead angle, in degrees; defaults to 60°
     */
    headAngle?: ConstantAccessor<number>;
    /**
     * the arrowhead scale; defaults to 8
     */
    headLength?: ConstantAccessor<number>;
    /**
     * inset at the end of the arrow (useful if the arrow points to a dot)
     */
    insetEnd?: ConstantAccessor<number>;
    /**
     * inset at the start of the arrow
     */
    insetStart?: ConstantAccessor<number>;
    /**
     * shorthand for the two insets
     */
    inset?: ConstantAccessor<number>;
    sweep?: SweepOption;
    children?: Snippet;
};
/** Arrow2 */
declare const Arrow: import("svelte").Component<ArrowProps, {}, "">;
type Arrow = ReturnType<typeof Arrow>;
export default Arrow;
