import type { BaseMarkProps, ChannelAccessor, CurveName, DataRecord } from '../types.js';
import type { CurveFactory } from 'd3-shape';
type DifferenceYMarkProps = {
    data: DataRecord[];
    x1: ChannelAccessor;
    /**
     * the horizontal position of the metric; bound to the x scale
     */
    x2: ChannelAccessor;
    x: ChannelAccessor;
    /**
     * the vertical position of the comparison; bound to the y scale
     */
    y1: ChannelAccessor;
    /**
     * the vertical position of the metric; bound to the y scale
     */
    y2: ChannelAccessor;
    y: ChannelAccessor;
    positiveFill?: string;
    positiveFillOpacity?: number;
    negativeFill?: string;
    negativeFillOpacity?: number;
    stroke: boolean | ChannelAccessor;
    curve?: CurveName | CurveFactory;
    tension?: number;
} & BaseMarkProps;
declare const DifferenceY: import("svelte").Component<DifferenceYMarkProps, {}, "">;
type DifferenceY = ReturnType<typeof DifferenceY>;
export default DifferenceY;
