import type { BaseMarkProps, ChannelAccessor } from '../../types.js';
type RegressionType = 'linear' | 'quad' | 'poly' | 'exp' | 'log' | 'pow' | 'loess';
export type RegressionMarkProps = BaseMarkProps & {
    x: ChannelAccessor;
    y: ChannelAccessor;
    type: RegressionType;
    /**
     * If order is specified, sets the regression's order to the specified number.
     * For example, if order is set to 4, the regression generator will perform a
     * fourth-degree polynomial regression. Likewise, if order is set to 2, the
     * regression generator will perform a quadratic regression. Be careful about
     * attempting to fit your data with higher order polynomials; though the
     * regression line will fit your data with a high determination coefficient,
     * it may have little predictive power for data outside of your domain.
     */
    order: number;
    base: number;
    span: number;
    confidence: number;
};
type $$ComponentProps = RegressionMarkProps & {
    dependent: 'x' | 'y';
};
declare const Regression: import("svelte").Component<$$ComponentProps, {}, "">;
type Regression = ReturnType<typeof Regression>;
export default Regression;
